<?php
/**
 * @file
 *   Core voicemail functions for VoIP extensions.
 */

/**
 * Implementation of hook_perm().
 */
function voicemail_perm() {
  return array(
    'Delete own voicemail',
    'Delete any voicemial',
  );
}

/**
 * Implementation of hook_menu().
 */
function voicemail_menu() {
  $items = array();

  $items['voicemail/box/%/%/delete'] = array(
    'page callback' => 'voicemail_box_file_remove_page',
    'page arguments' => array(2, 3),
    'title' => 'Remove a voicemail message from a mailbox',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    // 'access callback' => 'voicemail_box_access',
    // 'access arguments' => array(2),
  );
  $items['voicemail/box/%/%/read'] = array(
    'page callback' => 'voicemail_box_file_read_page',
    'page arguments' => array(2, 3),
    'title' => 'Mark a voicemail message listened to in a mailbox',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    // 'access callback' => 'voicemail_box_access',
    // 'access arguments' => array(2),
  );
  $items['voicemail/box/%/%/unread'] = array(
    'page callback' => 'voicemail_box_file_unread_page',
    'page arguments' => array(2, 3),
    'title' => 'Mark a voicemail message listened to in a mailbox',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    // 'access callback' => 'voicemail_box_access',
    // 'access arguments' => array(2),
  );

  return $items;
}

function voicemail_box_file_remove_page($eid, $fid) {
  try {
    $message = new VoicemailMessage($fid);
    $message->removeMailbox($eid);
  }
  catch (Exception $e) {
    watchdog('voicemail', t("Failed to remove message from inbox: @error", array('@error' => $e->getMessage)), WATCHDOG_ERROR);
  }
  drupal_goto();
}

function voicemail_box_file_read_page($eid, $fid) {
  VoicemailMessageInstance::setIsnew($eid, $fid, FALSE);
  drupal_goto();
}

function voicemail_box_file_unread_page($eid, $fid) {
  VoicemailMessageInstance::setIsnew($eid, $fid, TRUE);
  drupal_goto();
}

/**
 * Implementation of hook_voipscript_load_script().
 */
function voicemail_voipscript_load_script($script_name, $params = array()) {
  switch ($script_name) {
    case 'voicemail_basic':
      module_load_include('inc', 'voicemail', 'voicemail.script');
      $defaults = array(
        'prompt' => t('Please record your message after the tone. And then press !key to finish.'), 
        'timeout' => 5, 
        'end_key' => '#', 
        'max_length' => 3600, 
        'format' => 'mp3', 
        'play_beep' => TRUE,
      );
      $params = $params + $defaults;
      $extension = voipextension_load($params['eid']);
      return _voicemail_get_basic_script($params['eid'], $params['prompt'], $params['timeout'], $params['end_key'], $params['max_length'], $params['format'], $params['play_beep']);
    case 'voicemail_save_message':
      module_load_include('inc', 'voicemail', 'voicemail.script');
      return _voicemail_get_save_message_script($params['eid'], $params['fid'], $params['caller_number'], $params['caller_name'], $params['call_id'], $params['sent_on']);
    case 'voicemail_set_isnew':
      module_load_include('inc', 'voicemail', 'voicemail.script');
      return _voicemail_set_isnew_script($params['eid'], $params['fid'], $params['is_new']);
    case 'voicemail_remove_message':
      module_load_include('inc', 'voicemail', 'voicemail.script');
      return _voicemail_delete_message_script($params['eid'], $params['fid']);
  } 
}

/**
 * Implementation of hook_voipscript_get_script_names().
 */
function voicemail_voipscript_get_script_names() {
  return array(
    'voicemail_basic',
    'voicemail_save_message',
    'voicemail_set_isnew',
    'voicemail_remove_message',
  );
}

/**
 * Implementation of hook_views_api().
 */
function voicemail_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'voicemail') .'/views',
  );
}
